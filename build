ReplaceInclude()
{
    local replace_path="$DEV_PATH"
    local replace_name="$1"

    if [ "$replace_name" == "build" ] 
    then
        return
    elif [ "$replace_name" == "src/\$self" ] 
    then
        echo "${2:-}if [ \"\$self\" == \"tv\" ] || [ \"\$self\" == \"iptv\" ]"
        echo "${2:-}then"
        ReplaceInclude src/tv "    ${2:-}"
        bins=(v2 x nx or pve arm ibm cf cx ali lhh rc cw dr)
        for bin in "${bins[@]}"
        do
            echo "${2:-}elif [ \"\$self\" == \"$bin\" ]"
            echo "${2:-}then"
            ReplaceInclude src/$bin "    ${2:-}"
        done
        echo "${2:-}elif [ \"\$self\" == \"tr\" ]"
        echo "${2:-}then"
        ReplaceInclude src/tr "    ${2:-}"
        echo "${2:-}fi"
        return
    fi

    while [[ $replace_name =~ \/ ]] 
    do
        replace_path="$replace_path/${replace_name%%/*}"
        replace_name="${replace_name#*/}"
    done

    local here=false here_tag=""
    while IFS= read -r line 
    do
        if [ "$here" = true ] 
        then
            echo "$line"
            if [ "$line" = "$here_tag" ] 
            then
                here=false
            fi
            continue
        elif [[ $line =~ ^([ ]*)cat([ ]) ]] 
        then
            here=true
            here_tag="${line#*<<}"
            here_tag="${here_tag#"${here_tag%%[![:space:]]*}"}"
            here_tag=${here_tag%% *}
            here_tag=${here_tag#-}
        fi
        if [ -z "$line" ] 
        then
            echo
        elif [ "$here" = true ]
        then
            echo "$line"
        elif [[ $line =~ ^([ ]*)Include\ ([^ ]+) ]] 
        then
            ReplaceInclude ${BASH_REMATCH[2]} "${2:-}${BASH_REMATCH[1]}"
        elif [[ $line =~ ^([ ]*)\$\{ ]] || [[ $line =~ ^([ ]*)\` ]] || [[ $line =~ ^([ ]*)\â€” ]]
        then
            echo "$line"
        else
            echo "${2:-}$line"
        fi
    done < "$replace_path/$replace_name"
}

BuildShFile()
{
    ReplaceInclude make | sed '/DEV_PATH/,/sh_ver/{/sh_ver/!d;};/Include build/d' > "$DEV_PATH/iptv.sh"

    if [ "$INSTALL_SH" = true ] 
    then
        cp -f "$DEV_PATH/iptv.sh" "$SH_FILE"
    fi
}

if [ "${1:-}" == "install" ] 
then
    INSTALL_SH=true
else
    INSTALL_SH=false
fi

Spinner "Building iptv.sh" BuildShFile

Println "$info new iptv.sh created! For devs only!!\n"

exit 0
