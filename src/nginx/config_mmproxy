Include utils/go

if [ ! -e ~/allowed-subnets.txt ] 
then
    echo -en "0.0.0.0/0\n::/0\n" > ~/allowed-subnets.txt
fi

GoInstall

if [[ ! -x $(command -v go-mmproxy) ]] 
then
    Println "$info 安装 go-mmproxy"
    go install github.com/path-network/go-mmproxy@latest
fi

echo
mmproxy_opotions=( '用于 acme.sh' '用于 ssh' '手动配置' )
inquirer list_input_index "选择操作" mmproxy_opotions mmproxy_opotions_index

if [ "$mmproxy_opotions_index" -eq 0 ] 
then
    mmproxy_name="acme"
    acme_tip="(acme 监听端口)"
elif [ "$mmproxy_opotions_index" -eq 1 ] 
then
    mmproxy_name="ssh"
    ssh_tip="(ssh 监听端口)"
else
    echo
    ExitOnText "输入 mmproxy 配置名称(英文)" mmproxy_name

    if [ "$mmproxy_name" == "acme" ] || [ "$mmproxy_name" == "ssh" ]
    then
        Println "$error 保留名称, 请重新输入\n"
        exit 1
    elif [ -f /etc/systemd/system/mmproxy-$mmproxy_name.service ] 
    then
        Println "$error 名称已经存在\n"
        exit 1
    fi
fi

Println "$tip 比如 nginx 分流后端: 127.0.0.1:1234"
inquirer text_input "输入 mmproxy 监听 地址+端口: " mmproxy_listen "$i18n_random"

if [ "$mmproxy_listen" == "$i18n_random" ] 
then
    mmproxy_listen="127.0.0.1:$(GetFreePort)"
fi

if [ "$mmproxy_name" == "ssh" ] 
then
    Println "$tip 请之后将 nginx 分流 ssh 协议至 $mmproxy_listen, 并将 ssh 监听改为下面输入的地址和端口"
elif [ "$mmproxy_name" == "acme" ] 
then
    Println "$tip 请之后将 nginx 分流 acme 协议至 $mmproxy_listen"
fi

Println "$tip 比如: 127.0.0.1:2222"
ExitOnText "输入 ipv4 分流目标 地址+端口${acme_tip:-}${ssh_tip:-}: " mmproxy_target_v4

echo
inquirer text_input "输入 ipv6 分流目标 地址+端口${acme_tip:-}${ssh_tip:-}: " mmproxy_target_v6 "[::1]:${mmproxy_target_v4#*:}"

if [ -e "/etc/systemd/system/mmproxy-$mmproxy_name.service" ] 
then
    reload=1
fi

cat > /etc/systemd/system/mmproxy-"$mmproxy_name".service <<EOF
[Unit]
Description=mmproxy-$mmproxy_name
After=syslog.target network-online.target nss-lookup.target
Wants=network-online.target

[Service]
ExecStart=$go_path/bin/go-mmproxy --allowed-subnets $HOME/allowed-subnets.txt -l $mmproxy_listen -4 $mmproxy_target_v4 -6 $mmproxy_target_v6
StartLimitInterval=60s
StartLimitBurst=5
RestartSec=5
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

if [ "${reload:-0}" -eq 1 ] 
then
    systemctl daemon-reload
    systemctl enable "mmproxy-$mmproxy_name"
    systemctl restart "mmproxy-$mmproxy_name"
else
    systemctl enable "mmproxy-$mmproxy_name"
    systemctl start "mmproxy-$mmproxy_name"
fi

if [ ! -f "$HOME"/ip.sh ] 
then
cat > "$HOME"/ip.sh <<EOF
#!/bin/bash
ip rule add from 127.0.0.1/8 iif lo table 100
ip route add local 0.0.0.0/0 dev lo table 100
ip -6 rule add from ::1/128 iif lo table 100
ip -6 route add local ::/0 dev lo table 100
EOF
    chmod +x ~/ip.sh
fi

if [ ! -f /etc/rc.local ]
then
cat > /etc/rc.local <<EOF
#!/bin/bash
$HOME/ip.sh
EOF
elif ! grep -q "$HOME/ip.sh" < /etc/rc.local
then
    echo "$HOME/ip.sh" >> /etc/rc.local
fi

chmod +x /etc/rc.local

if [[ $(systemctl is-active rc-local) == "inactive" ]] 
then
    systemctl enable rc-local || true
fi

if ! grep -q 'iif lo lookup 100' < <(ip rule list)
then
    systemctl restart rc-local || true
fi

Println "$info mmproxy-$mmproxy_name 设置成功\n"
