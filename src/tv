Include utils/python "$@"
Include utils/ffmpeg "$@"
Include utils/youtube "$@"
Include utils/openssl "$@"
Include utils/pdf2html "$@"
Include utils/imagemagick "$@"
Include utils/imgcat "$@"
Include utils/git "$@"
Include utils/nodejs "$@"
Include utils/mongodb "$@"
Include src/iptv/filter_string "$@"
Include src/iptv/rand_name "$@"
Include src/iptv/sync_file "$@"
Include src/iptv/flv_creator "$@"
Include src/iptv/hls_creator "$@"
Include src/iptv/get_default "$@"
Include src/iptv/get_channels "$@"
Include src/iptv/list_channels "$@"
Include src/iptv/get_channel "$@"
Include src/iptv/list_channel "$@"
Include src/iptv/input_channels "$@"
Include src/iptv/view_channel "$@"
Include src/iptv/parse_hls "$@"
Include src/iptv/parse_youtube "$@"
Include src/iptv/parse_stream "$@"
Include src/iptv/set_stream "$@"
Include src/iptv/add_channel "$@"
Include src/iptv/edit_channel "$@"
Include src/iptv/menu_edit_channel "$@"
Include src/iptv/toggle_channel "$@"
Include src/iptv/check_xtream "$@"
Include src/iptv/start_channel "$@"
Include src/iptv/stop_channel "$@"
Include src/iptv/restart_channel "$@"
Include src/iptv/view_log "$@"
Include src/iptv/delete_channel "$@"
Include src/iptv/edit_default "$@"
Include src/iptv/list_schedule "$@"
Include src/iptv/parse_schedule "$@"
Include src/iptv/search_soccer "$@"
Include src/iptv/add_schedule "$@"
Include src/iptv/edit_schedule "$@"
Include src/iptv/sort_schedule "$@"
Include src/iptv/delete_schedule "$@"
Include src/iptv/menu_schedule "$@"
Include src/iptv/list_monitor "$@"
Include src/iptv/start_monitor "$@"
Include src/iptv/menu_monitor "$@"
Include src/iptv/menu_edit_default "$@"
Include src/service/get "$@"
Include src/_4gtv/set_acc "$@"
Include src/_4gtv/reg_acc "$@"
Include src/_4gtv/list_accs "$@"
Include src/_4gtv/login_acc "$@"
Include src/_4gtv/list_acc "$@"
Include src/_4gtv/edit_acc "$@"
Include src/_4gtv/del_acc "$@"
Include src/_4gtv/get_acc_token "$@"
Include src/_4gtv/use_proxy "$@"
Include src/_4gtv/cron "$@"
Include src/_4gtv/enable_cron "$@"
Include src/_4gtv/disable_cron "$@"
Include src/_4gtv/add_link "$@"
Include src/_4gtv/start_link "$@"
Include src/xtream_codes/get_domains "$@"
Include src/xtream_codes/get_channels "$@"
Include src/xtream_codes/add_account "$@"
Include src/xtream_codes/verify_mac "$@"
Include src/xtream_codes/list "$@"
Include src/xtream_codes/list_account "$@"
Include src/xtream_codes/test_account "$@"
Include src/xtream_codes/list_mac "$@"
Include src/xtream_codes/search_channels "$@"
Include src/xtream_codes/list_channels "$@"
Include src/xtream_codes/add_mac "$@"
Include src/vip/set_host "$@"
Include src/vip/add_host "$@"
Include src/vip/edit_host "$@"
Include src/vip/get_hosts "$@"
Include src/vip/list_hosts "$@"
Include src/vip/delete_host "$@"
Include src/vip/set_user "$@"
Include src/vip/add_user "$@"
Include src/vip/edit_user "$@"
Include src/vip/get_users "$@"
Include src/vip/list_users "$@"
Include src/vip/list_user "$@"
Include src/vip/delete_user "$@"
Include src/vip/set_channel "$@"
Include src/vip/add_channel "$@"
Include src/vip/deploy_channel "$@"
Include src/vip/edit_channel "$@"
Include src/vip/list_channels "$@"
Include src/vip/get_stream "$@"
Include src/vip/list_channel "$@"
Include src/vip/delete_channel "$@"
Include src/vip/get_config "$@"
Include src/vip/set_public "$@"
Include src/vip/process_lists "$@"
Include src/vip/get_schedules "$@"
Include src/vip/monitor "$@"
Include src/vip/enable "$@"
Include src/vip/disable "$@"
Include src/vip/list_user_channel "$@"
Include src/vip/verify_license "$@"
Include src/iptv/menu_vip_user "$@"
Include src/iptv/menu_vip "$@"
Include src/iptv/menu_iptv "$@"
Include src/iptv/usage "$@"

Install()
{
    if [ -e "$IPTV_ROOT" ]
    then
        Println "`eval_gettext \"\\\$error 目录已存在, 请先卸载...\"`\n" && exit 1
    else
        DepsCheck

        #if grep -q '\--show-progress' < <(wget --help)
        #then
        #    _PROGRESS_OPT="--show-progress"
        #else
        #    _PROGRESS_OPT=""
        #fi

        sudo mkdir -p "$IPTV_ROOT"
        sudo chown $USER "$IPTV_ROOT"

        FFmpegInstall
        JQInstall
        CurlImpersonateInstall

        default=$(
        $JQ_FILE -n \
            --arg proxy '' \
            --arg xc_proxy '' \
            --arg user_agent "$USER_AGENT_TV" \
            --arg headers '' \
            --arg cookies 'stb_lang=en; timezone=Europe/Amsterdam' \
            --arg playlist_name '' \
            --arg seg_dir_name '' \
            --arg seg_name '' \
            --arg seg_length 6 \
            --arg seg_count 5 \
            --arg video_codec "libx264" \
            --arg audio_codec "aac" \
            --arg video_audio_shift '' \
            --arg draw_text '' \
            --arg quality '' \
            --arg bitrate "900" \
            --arg resolution "1280x720" \
            --arg const "false" \
            --arg const_cbr "false" \
            --arg encrypt "false" \
            --arg encrypt_session "false" \
            --arg keyinfo_name '' \
            --arg key_name '' \
            --arg input_flags "-copy_unknown -reconnect 1 -reconnect_at_eof 1 -reconnect_streamed 1 -reconnect_delay_max 2000 -rw_timeout 10000000 -y -nostats -nostdin -hide_banner -loglevel error" \
            --arg output_flags "-g 60 -sc_threshold 0 -sn -preset superfast -pix_fmt yuv420p -profile:v main" \
            --arg sync "true" \
            --arg sync_file '' \
            --arg sync_index "data:0:channels" \
            --arg sync_pairs "chnl_name:channel_name,chnl_id:output_dir_name,chnl_pid:pid,chnl_cat=港澳台,url=http://xxx.com/live" \
            --arg schedule_file '' \
            --arg flv_delay_seconds 20 \
            --arg flv_restart_nums 20 \
            --arg hls_delay_seconds 120 \
            --arg hls_min_bitrate 500 \
            --arg hls_max_seg_size 5 \
            --arg hls_restart_nums 20 \
            --arg hls_key_period 30 \
            --arg hls_end_list "false" \
            --arg anti_ddos_port 80 \
            --arg anti_ddos_syn_flood "false" \
            --arg anti_ddos_syn_flood_delay_seconds 3 \
            --arg anti_ddos_syn_flood_seconds 3600 \
            --arg anti_ddos "false" \
            --arg anti_ddos_seconds 120 \
            --arg anti_ddos_level 6 \
            --arg anti_leech "false" \
            --arg anti_leech_restart_nums 3 \
            --arg anti_leech_restart_flv_changes "true" \
            --arg anti_leech_restart_hls_changes "true" \
            --arg recheck_period 0 \
            --arg version "$sh_ver" \
            '{
                proxy: $proxy,
                xc_proxy: $xc_proxy,
                user_agent: $user_agent,
                headers: $headers,
                cookies: $cookies,
                playlist_name: $playlist_name,
                seg_dir_name: $seg_dir_name,
                seg_name: $seg_name,
                seg_length: $seg_length | tonumber,
                seg_count: $seg_count | tonumber,
                video_codec: $video_codec,
                audio_codec: $audio_codec,
                video_audio_shift: $video_audio_shift,
                draw_text: $draw_text,
                quality: $quality,
                bitrate: $bitrate,
                resolution: $resolution,
                const: $const | test("true"),
                const_cbr: $const_cbr | test("true"),
                encrypt: $encrypt | test("true"),
                encrypt_session: $encrypt_session | test("true"),
                keyinfo_name: $keyinfo_name,
                key_name: $key_name,
                input_flags: $input_flags,
                output_flags: $output_flags,
                sync: $sync | test("true"),
                sync_file: $sync_file,
                sync_index: $sync_index,
                sync_pairs: $sync_pairs,
                schedule_file: $schedule_file,
                flv_delay_seconds: $flv_delay_seconds | tonumber,
                flv_restart_nums: $flv_restart_nums | tonumber,
                hls_delay_seconds: $hls_delay_seconds | tonumber,
                hls_min_bitrate: $hls_min_bitrate | tonumber,
                hls_max_seg_size: $hls_max_seg_size | tonumber,
                hls_restart_nums: $hls_restart_nums | tonumber,
                hls_key_period: $hls_key_period | tonumber,
                hls_end_list: $hls_end_list | test("true"),
                anti_ddos_port: $anti_ddos_port,
                anti_ddos_syn_flood: $anti_ddos_syn_flood | test("true"),
                anti_ddos_syn_flood_delay_seconds: $anti_ddos_syn_flood_delay_seconds | tonumber,
                anti_ddos_syn_flood_seconds: $anti_ddos_syn_flood_seconds | tonumber,
                anti_ddos: $anti_ddos | test("true"),
                anti_ddos_seconds: $anti_ddos_seconds | tonumber,
                anti_ddos_level: $anti_ddos_level | tonumber,
                anti_leech: $anti_leech | test("true"),
                anti_leech_restart_nums: $anti_leech_restart_nums | tonumber,
                anti_leech_restart_flv_changes: $anti_leech_restart_flv_changes | test("true"),
                anti_leech_restart_hls_changes: $anti_leech_restart_hls_changes | test("true"),
                recheck_period: $recheck_period | tonumber,
                version: $version
            }'
        )

        $JQ_FILE -n --argjson default "$default" \
        '{
            default: $default,
            channels: []
        }' > "$CHANNELS_FILE"

        Println "`eval_gettext \"\\\$info 安装完成\"`\n"
    fi
}

Uninstall()
{
    [ ! -d "$IPTV_ROOT" ] && Println "`eval_gettext \"\\\$error 尚未安装, 请检查 !\"`\n" && exit 1

    echo
    ExitOnList n "`gettext \"确定要 卸载此脚本以及产生的全部文件\"`"

    MonitorStop
    VipDisable
    CloudflareDisableWorkersMonitor

    if [ -e "$NODE_ROOT/index.js" ] 
    then
        pm2 stop 0 2> /dev/null || true
    fi

    if crontab -l | grep -q "$LOGROTATE_CONFIG" 2> /dev/null
    then
        crontab -l > "$IPTV_ROOT/cron_tmp" 2> /dev/null || true
        sed -i "/${LOGROTATE_CONFIG//\//\\/}/d" "$IPTV_ROOT/cron_tmp"
        crontab "$IPTV_ROOT/cron_tmp" > /dev/null
        rm -f "$IPTV_ROOT/cron_tmp"
        Println "$info 已停止 logrotate\n"
    fi

    i18nGetMsg get_channel

    while IFS= read -r chnl_pid
    do
        GetChannel
        if [ "$chnl_flv_status" == "on" ] 
        then
            kind="flv"
            StopChannel
        elif [ "$chnl_status" == "on" ]
        then
            kind=""
            StopChannel
        fi
    done < <($JQ_FILE '.channels[].pid' $CHANNELS_FILE)

    StopChannelsForce 2> /dev/null || true

    rm -rf "${IPTV_ROOT:-notfound}"

    Println "`eval_gettext \"\\\$info 卸载完成 !\"`\n"
}

Update()
{
    ShFileUpdate

    pkill -f 'tv s -' 2> /dev/null || true

    [ ! -d "$IPTV_ROOT" ] && Println "`eval_gettext \"\\\$error 尚未安装, 请检查 !\"`\n" && exit 1

    while IFS= read -r line 
    do
        if [[ $line == *"built on "* ]] 
        then
            line=${line#*built on }
            git_date=${line%<*}
            break
        fi
    done < <(curl -s -Lm 10 "$FFMPEG_MIRROR_LINK/index.html" 2> /dev/null)

    if [ -z "${git_date:-}" ] 
    then
        Println "`eval_gettext \"\\\$error 暂时无法连接服务器, 请稍后再试 !\"`\n"
        exit 1
    fi

    if [ -s "$IPTV_ROOT/monitor.pid" ] || [ -s "$IPTV_ROOT/antiddos.pid" ]
    then
        echo
        ExitOnList y "`gettext \"需要先关闭监控, 是否继续\"`"
        MonitorStop
    fi

    FFmpegInstall

    if [ "$dist" != "mac" ] 
    then
        if [[ ${FFMPEG_FILE_ROOT##*/} == *"${git_date:-20200101}"* ]] 
        then
            echo
            inquirer list_input "`gettext \"FFmpeg 已经是最新, 是否重装\"`" ny_options reinstall_ffmpeg_yn
            if [ "$reinstall_ffmpeg_yn" == "$i18n_no" ]
            then
                reinstall_ffmpeg_yn="N"
            else
                reinstall_ffmpeg_yn="Y"
            fi
        else
            reinstall_ffmpeg_yn="Y"
        fi

        if [[ ${reinstall_ffmpeg_yn:-N} == [Yy] ]] 
        then
            rm -rf "$FFMPEG_ROOT"/ffmpeg-git-*/
            Spinner "`gettext \"更新 FFmpeg\"`" FFmpegInstall
        fi

        # A limitation of statically linking glibc is the loss of DNS resolution.
        DepInstall nscd
    fi

    JQInstall

    Println "`eval_gettext \"脚本已更新为最新版本 [ \\\${green}\\\$sh_new_ver\\\${normal} ] ! (输入: tv 使用)\"`\n" && exit 0
}

if [ -e "$IPTV_ROOT" ] && [ ! -e "$LOCK_FILE" ] 
then
    Include src/iptv/update_self
fi

if [[ -n ${1+x} ]]
then
    case $1 in
        4g)
            Include src/iptv/menu_4gtv "$@"
        ;;
        s) 
            Include src/iptv/menu_listings "$@"
        ;;
        singtel) 
            Include src/iptv/cmd_singtel "$@"
        ;;
        astro)
            Include src/iptv/cmd_astro "$@"
        ;;
        m) 
            Include src/iptv/cmd_monitor "$@"
        ;;
        e) 
            Include src/iptv/cmd_e "$@"
        ;;
        ee) 
            Include src/iptv/cmd_ee "$@"
        ;;
        d)
            Include src/iptv/cmd_default "$@"
        ;;
        ffmpeg|FFmpeg) 
            Include utils/mirror "$@"
        ;;
        ts) 
            Include src/iptv/menu_ts "$@"
        ;;
        f|flv) 
            [ ! -d "$IPTV_ROOT" ] && Println "$error 尚未安装, 请检查 !\n" && exit 1
            kind="flv"
            color="$blue"
            shift
        ;;
        v|vip) 
            [ ! -d "$IPTV_ROOT" ] && Println "$error 尚未安装, 请检查 !\n" && exit 1
            vip=true
            shift
        ;;
        l|ll) 
            Include src/iptv/cmd_list "$@"
        ;;
        debug)
            Include src/iptv/cmd_debug "$@"
        ;;
        ed|editor)
            Include src/iptv/cmd_ed "$@"
        ;;
        a)
            Include src/iptv/cmd_a "$@"
        ;;
        c)
            Include src/iptv/cmd_c "$@"
        ;;
        color)
            Include src/iptv/menu_color "$@"
        ;;
        curl)
            Include src/iptv/cmd_curl "$@"
        ;;
        b|backup)
            Include src/iptv/cmd_backup "$@"
        ;;
        *)
        ;;
    esac
fi

if [ -z "$*" ]
then
    ShFileCheck
    if [ "${vip:-false}" = true ] 
    then
        VipMenu
    else
        Menu
    fi
else
    Include src/iptv/cmd_add "$@"
fi
